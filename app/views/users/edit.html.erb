<div class="bg-white shadow rounded-lg p-6">
  <div class="flex justify-between items-center mb-6">
    <h1 class="text-2xl font-bold text-gray-900">Edit User</h1>
    <%= link_to "← Back to Users", users_path, class: "text-blue-600 hover:text-blue-800" %>
  </div>

  <%= form_with model: @user, local: true, class: "space-y-6" do |form| %>
    <% if @user.errors.any? %>
      <div class="bg-red-50 border border-red-200 rounded-md p-4">
        <h3 class="text-sm font-medium text-red-800">Please fix the following errors:</h3>
        <ul class="mt-2 text-sm text-red-700 list-disc list-inside">
          <% @user.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <%= form.label :username, class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.text_field :username, class: "w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        <p class="mt-1 text-sm text-gray-500">Username must be unique</p>
      </div>

      <div>
        <%= form.label :name, class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.text_field :name, class: "w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
      </div>

      <div>
        <%= form.label :role, class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.select :role, 
            options_for_select(User::ROLES.map { |role| [role.humanize, role] }, @user.role), 
            { prompt: "Select a role" },
            { class: "w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500" } %>
        <p class="mt-1 text-sm text-gray-500">Role determines system access permissions</p>
      </div>

      <div>
        <%= form.label :employee_id, "Employee", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.select :employee_id,
            options_for_select([["None", ""]] + @employees.map { |emp| [emp.name, emp.id] }, @user.employee_id),
            {},
            { class: "w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500" } %>
        <p class="mt-1 text-sm text-gray-500">Link user account to an employee record</p>
      </div>
    </div>

    <!-- Password Section -->
    <div class="border-t border-gray-200 pt-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Change Password (Optional)</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :password, "New Password", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.password_field :password, class: "w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
          <p class="mt-1 text-sm text-gray-500">Leave blank to keep current password</p>
        </div>

        <div>
          <%= form.label :password_confirmation, "Confirm New Password", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.password_field :password_confirmation, class: "w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        </div>
      </div>
    </div>

    <!-- Account Information Display -->
    <div class="border-t border-gray-200 pt-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Account Information</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Account Created</label>
          <div class="text-sm text-gray-600 bg-gray-50 px-3 py-2 rounded-md">
            <%= @user.created_at.strftime("%B %d, %Y at %I:%M %p") %>
          </div>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Last Updated</label>
          <div class="text-sm text-gray-600 bg-gray-50 px-3 py-2 rounded-md">
            <%= @user.updated_at.strftime("%B %d, %Y at %I:%M %p") %>
          </div>
        </div>
      </div>
    </div>

    <!-- Action Buttons -->
    <div class="flex justify-between items-center pt-6 border-t border-gray-200">
      <div class="flex space-x-3">
        <%= form.submit "Update User", class: "bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-md font-medium" %>
        <%= link_to "Cancel", @user, class: "bg-gray-300 hover:bg-gray-400 text-gray-700 px-6 py-2 rounded-md font-medium" %>
      </div>
      
      <% unless @user == current_user %>
        <div class="text-right">
          <%= link_to "Delete User", user_path(@user), 
              data: { 
                turbo_method: :delete,
                turbo_confirm: "Are you sure you want to delete this user? This action cannot be undone." 
              }, 
              class: "bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm" %>
        </div>
      <% end %>
    </div>
  <% end %>

  <!-- Role Permissions Preview -->
  <div class="mt-8 bg-gray-50 rounded-lg p-4">
    <h4 class="text-md font-medium text-gray-900 mb-3">Current Role Permissions</h4>
    <div id="role-permissions" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
      <!-- This will be populated by JavaScript based on selected role -->
    </div>
  </div>
</div>

<script>
  // Update role permissions display when role changes
  const roleSelect = document.querySelector('select[name="user[role]"]');
  const permissionsContainer = document.getElementById('role-permissions');
  
  const rolePermissions = {
    'admin': ['Full system access', 'User management', 'All modules', 'System configuration'],
    'manager': ['Employee management', 'Financial data access', 'All business operations', 'Reports'],
    'supervisor': ['View operations', 'Limited editing', 'Production oversight', 'Team management'],
    'production_worker': ['Work order execution', 'Time tracking', 'Production updates'],
    'inventory_clerk': ['Inventory management', 'Stock updates', 'Material tracking'],
    'sales_rep': ['Sales order creation', 'Customer management', 'Order tracking'],
    'designer': ['Design request management', 'Design uploads', 'Creative workflow'],
    'quality_control': ['Quality inspections', 'Approval workflow', 'Quality reports']
  };
  
  function updatePermissions() {
    const selectedRole = roleSelect.value;
    const permissions = rolePermissions[selectedRole] || ['Basic access'];
    
    permissionsContainer.innerHTML = permissions.map(permission => `
      <div class="flex items-center">
        <svg class="h-4 w-4 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        <span class="text-sm text-gray-700">${permission}</span>
      </div>
    `).join('');
  }
  
  // Initialize on page load
  updatePermissions();
  
  // Update when role changes
  roleSelect.addEventListener('change', updatePermissions);
</script>
