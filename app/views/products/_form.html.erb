<%= form_with(model: product, class: "contents") do |form| %>
  <% if product.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-md mt-3">
      <h2><%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:</h2>
      <ul class="list-disc ml-6">
        <% product.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="bg-white shadow rounded-lg p-6">
    <!-- Basic Information -->
    <div class="mb-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :product_id, class: "block text-sm font-medium text-gray-700" %>
          <%= form.text_field :product_id, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:product_id].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:product_id].any?}] %>
        </div>

        <div>
          <%= form.label :name, class: "block text-sm font-medium text-gray-700" %>
          <%= form.text_field :name, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:name].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:name].any?}] %>
        </div>
      </div>

      <div class="mt-4">
        <%= form.label :description, class: "block text-sm font-medium text-gray-700" %>
        <%= form.text_area :description, rows: 3, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:description].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:description].any?}] %>
      </div>
    </div>

    <!-- Product Details -->
    <div class="mb-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Product Details</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <%= form.label :category, class: "block text-sm font-medium text-gray-700" %>
          <%= form.select :category, 
              [
                ["Rings", "rings"],
                ["Necklaces", "necklaces"],
                ["Bracelets", "bracelets"],
                ["Earrings", "earrings"],
                ["Watches", "watches"],
                ["Pendants", "pendants"]
              ], 
              { prompt: "Select Category" }, 
              { class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:category].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:category].any?}] } %>
        </div>

        <div>
          <%= form.label :material, class: "block text-sm font-medium text-gray-700" %>
          <%= form.text_field :material, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:material].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:material].any?}] %>
        </div>

        <div>
          <%= form.label :weight, "Weight (grams)", class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :weight, step: 0.1, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:weight].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:weight].any?}] %>
        </div>
      </div>
    </div>

    <!-- Pricing -->
    <div class="mb-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Pricing</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :cost_price, "Cost Price ($)", class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :cost_price, step: 0.01, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:cost_price].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:cost_price].any?}] %>
        </div>

        <div>
          <%= form.label :selling_price, "Selling Price ($)", class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :selling_price, step: 0.01, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:selling_price].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:selling_price].any?}] %>
        </div>
      </div>

      <!-- Profit Margin Display -->
      <div class="mt-4 p-3 bg-blue-50 rounded-md">
        <p class="text-sm text-blue-700">
          <strong>Profit Margin Calculator:</strong> 
          <span id="profit-margin">Enter cost and selling price to calculate</span>
        </p>
      </div>
    </div>

    <!-- Inventory -->
    <div class="mb-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Inventory</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <%= form.label :stock_quantity, "Current Stock", class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :stock_quantity, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:stock_quantity].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:stock_quantity].any?}] %>
        </div>

        <div>
          <%= form.label :minimum_stock, "Minimum Stock Level", class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :minimum_stock, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:minimum_stock].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:minimum_stock].any?}] %>
        </div>

        <div>
          <%= form.label :status, class: "block text-sm font-medium text-gray-700" %>
          <%= form.select :status, 
              [
                ["Active", "active"],
                ["Discontinued", "discontinued"],
                ["Out of Stock", "out_of_stock"]
              ], 
              { prompt: "Select Status" }, 
              { class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:status].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:status].any?}] } %>
        </div>
      </div>
    </div>

    <!-- Supplier -->
    <div class="mb-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Supplier Information</h3>
      <div>
        <%= form.label :supplier, class: "block text-sm font-medium text-gray-700" %>
        <%= form.text_field :supplier, class: ["mt-1 block w-full rounded-md border px-3 py-2", {"border-gray-300 focus:border-blue-500 focus:ring-blue-500": product.errors[:supplier].none?, "border-red-300 focus:border-red-500 focus:ring-red-500": product.errors[:supplier].any?}] %>
      </div>
    </div>

    <!-- Submit Button -->
    <div class="flex justify-end space-x-3">
      <%= link_to "Cancel", products_path, class: "px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50" %>
      <%= form.submit class: "px-4 py-2 bg-blue-600 border border-transparent rounded-md text-sm font-medium text-white hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2" %>
    </div>
  </div>
<% end %>

<!-- JavaScript for Profit Margin Calculator -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const costField = document.getElementById('product_cost_price');
  const sellingField = document.getElementById('product_selling_price');
  const marginDisplay = document.getElementById('profit-margin');

  function calculateMargin() {
    const cost = parseFloat(costField.value) || 0;
    const selling = parseFloat(sellingField.value) || 0;
    
    if (cost > 0 && selling > 0) {
      const profit = selling - cost;
      const margin = ((profit / cost) * 100).toFixed(2);
      marginDisplay.innerHTML = `Profit: $${profit.toFixed(2)} | Margin: ${margin}%`;
    } else {
      marginDisplay.innerHTML = 'Enter cost and selling price to calculate';
    }
  }

  if (costField && sellingField) {
    costField.addEventListener('input', calculateMargin);
    sellingField.addEventListener('input', calculateMargin);
    calculateMargin(); // Calculate on page load
  }
});
</script>
